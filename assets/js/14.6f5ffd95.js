(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{286:function(t,e,n){"use strict";n.r(e);var a=n(14),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"webglprogram"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webglprogram"}},[t._v("#")]),t._v(" WebGLProgram")]),t._v(" "),e("p",[e("strong",[t._v("WebGLProgram")]),t._v(" 是 "),e("code",[t._v("WebGL API")]),t._v(" 的一部分，它由两个 "),e("code",[t._v("WebGLShaders")]),t._v("（"),e("code",[t._v("webgl")]),t._v(" 着色器）组成")]),t._v(" "),e("p",[t._v("分别为顶点着色器和片元着色器（两种着色器都是采用 "),e("code",[t._v("GLSL")]),t._v(" 语言编写的）")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("  // 顶点着色器\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("vertexShader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-shader/x-vertex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  // 片元着色器\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("fragmentShader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-shader/x-fragment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("这两个着色器对象用于处理图形的不同阶段。")]),t._v(" "),e("p",[t._v("创建一个 "),e("strong",[t._v("WebGLProgram")]),t._v(" 需要调用 "),e("code",[t._v("GL")]),t._v(" 上下文的 "),e("code",[t._v("createProgram()")]),t._v(" 方法，调用 "),e("code",[t._v("attachShader()")]),t._v(" 方法附加上着色器，将它们连接到一个可用的程序")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" program "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProgram")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加预先存在的着色器")]),t._v("\ngl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachShader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vertexShader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachShader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fragmentShader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("linkProgram")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProgramParameter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINK_STATUS")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" info "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProgramInfoLog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WebGL program 不能编译。\\n\\n"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.createProgram()")]),t._v(" 用于创建和初始化一个 "),e("strong",[t._v("WebGLProgram")]),t._v(" 对象")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.attachShader(program, shader)")]),t._v(" 负责往 "),e("strong",[t._v("WebGLProgram")]),t._v(" 添加一个片段或者顶点着色器")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("program")]),t._v(" : 一个 "),e("strong",[t._v("WebGLProgram")]),t._v(" 对象")]),t._v(" "),e("li",[e("code",[t._v("shader")]),t._v(" : 一个类型为片段或者顶点的 "),e("code",[t._v("WebGLShader")]),t._v("（ "),e("code",[t._v("webgl")]),t._v(" 着色器）")])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.linkProgram(program)")]),t._v(" 链接给定的 "),e("strong",[t._v("WebGLProgram")]),t._v("，从而完成为程序的片元和顶点着色器准备 "),e("code",[t._v("GPU")]),t._v(" 代码的过程")]),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getProgramParameter(program, pname)")]),t._v(" 返回 "),e("strong",[t._v("WebGLProgram")]),t._v(" 的信息")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("pname")]),t._v(": 指定要查询的信息的 "),e("code",[t._v("Glenum (en-US)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.LINK_STATUS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示上次链接操作是否成功。")]),t._v(" "),e("li",[e("code",[t._v("gl.DELETE_STATUS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示程序是否被标记为要删除。")]),t._v(" "),e("li",[e("code",[t._v("gl.VALIDATE_STATUS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示上次验证操作是否成功。")]),t._v(" "),e("li",[e("code",[t._v("gl.ATTACHED_SHADERS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示程序所附着着色器的数量。")]),t._v(" "),e("li",[e("code",[t._v("gl.ACTIVE_ATTRIBUTES")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示程序活动属性变量的数目。")]),t._v(" "),e("li",[e("code",[t._v("gl.ACTIVE_UNIFORMS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示程序中活动的统一变量的数量。")])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.TRANSFORM_FEEDBACK_BUFFER_MODE")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，表示转换反馈激活时的缓冲区模式。")]),t._v(" "),e("li",[e("code",[t._v("gl.TRANSFORM_FEEDBACK_VARYINGS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示在转换反馈模式中要捕获的可变变量的数量。")]),t._v(" "),e("li",[e("code",[t._v("gl.ACTIVE_UNIFORM_BLOCKS")]),t._v(" 返回一个 "),e("code",[t._v("GLboolean (en-US)")]),t._v(" ，指示包含活动制服的统一块的数量。")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getProgramInfoLog(program)")]),t._v(" 返回参数中指定的 "),e("strong",[t._v("WebGLProgram")]),t._v(" "),e("code",[t._v("object")]),t._v(" 的信息。这些信息包括在 "),e("code",[t._v("linking")]),t._v(" 过程中的错误以及 "),e("strong",[t._v("WebGLProgram")]),t._v(" "),e("code",[t._v("objects")]),t._v(" 合法性检查的错误")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.createBuffer()")]),t._v(" 创建并初始化一个用于储存顶点数据或着色数据的 "),e("strong",[t._v("WebGLBuffer")]),t._v(" 对象")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.bindBuffer(target, buffer)")]),t._v(" 将给定的 "),e("strong",[t._v("WebGLBuffer")]),t._v(" 绑定到目标")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("target")]),t._v(" : "),e("code",[t._v("GLenum (en-US)")]),t._v(" 指定绑定点 "),e("code",[t._v("(target)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.ARRAY_BUFFER")]),t._v(" : 包含顶点属性的 "),e("code",[t._v("Buffer")]),t._v(" ，如顶点坐标，纹理坐标数据或顶点颜色数据。")]),t._v(" "),e("li",[e("code",[t._v("gl.ELEMENT_ARRAY_BUFFER")]),t._v(" : 用于元素索引的 "),e("code",[t._v("Buffer")]),t._v(" 。")])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.COPY_READ_BUFFER")]),t._v(" : 从一个 "),e("code",[t._v("Buffer")]),t._v(" 对象复制到另一个 "),e("code",[t._v("Buffer")]),t._v(" 对象。")]),t._v(" "),e("li",[e("code",[t._v("gl.COPY_WRITE_BUFFER")]),t._v(" : 从一个 "),e("code",[t._v("Buffer")]),t._v(" 对象复制到另一个 "),e("code",[t._v("Buffer")]),t._v(" 对象。")]),t._v(" "),e("li",[e("code",[t._v("gl.TRANSFORM_FEEDBACK_BUFFER")]),t._v(" : 用于转换反馈操作的缓冲区。")]),t._v(" "),e("li",[e("code",[t._v("gl.UNIFORM_BUFFER")]),t._v(" : 用于存储统一块的 "),e("code",[t._v("Buffer")]),t._v(" 。")]),t._v(" "),e("li",[e("code",[t._v("gl.PIXEL_PACK_BUFFER")]),t._v(" : 用于像素传输操作的 "),e("code",[t._v("Buffer")]),t._v(" 。")]),t._v(" "),e("li",[e("code",[t._v("gl.PIXEL_UNPACK_BUFFER")]),t._v(" : 用于像素传输操作的 "),e("code",[t._v("Buffer")]),t._v(" 。")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("buffer")]),t._v(" : 要绑定的 "),e("strong",[t._v("WebGLBuffer")]),t._v(" 。")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.bufferData(target, size, usage)")]),t._v(" 创建并初始化了 "),e("code",[t._v("Buffer")]),t._v(" 对象的数据存储区")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("size")]),t._v(" : "),e("code",[t._v("GLsizeiptr (en-US)")]),t._v(" 设定 "),e("code",[t._v("Buffer")]),t._v(" 对象的数据存储区大小。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("srcData")]),t._v(" (可选) : 一个"),e("code",[t._v("ArrayBuffer")]),t._v("，"),e("code",[t._v("SharedArrayBuffer")]),t._v(" 或者 "),e("code",[t._v("ArrayBufferView")]),t._v(" 类型的数组对象，将被复制到 "),e("code",[t._v("Buffer")]),t._v(" 的数据存储区。如果为 "),e("code",[t._v("null")]),t._v(" ，数据存储区仍会被创建，但是不会进行初始化和定义。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("usage")]),t._v(" : "),e("code",[t._v("GLenum (en-US)")]),t._v(" 指定数据存储区的使用方法。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.STATIC_DRAW")]),t._v(" : 缓冲区的内容可能经常使用，而不会经常更改。内容被写入缓冲区，但不被读取。\n（数据被写入缓冲区，但不会被直接读取。当数据被写入缓冲区时，它被保存在内存中，以备将来使用。这意味着数据可以被其他部分的程序读取和处理，而不必再次从源获取数据。而不被读取的意思是，程序当前不需要读取缓冲区中的数据，但可以在以后的某个时候读取。）")]),t._v(" "),e("li",[e("code",[t._v("gl.DYNAMIC_DRAW")]),t._v(" : 缓冲区的内容可能经常被使用，并且经常更改。内容被写入缓冲区，但不被读取。")]),t._v(" "),e("li",[e("code",[t._v("gl.STREAM_DRAW")]),t._v(" : 缓冲区的内容可能不会经常使用。内容被写入缓冲区，但不被读取。")])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.STATIC_READ")]),t._v(" : 缓冲区的内容可能经常使用，而不会经常更改。内容从缓冲区读取，但不写入。")]),t._v(" "),e("li",[e("code",[t._v("gl.DYNAMIC_READ")]),t._v(" : 缓冲区的内容可能经常使用，并且经常更改。内容从缓冲区读取，但不写入。")]),t._v(" "),e("li",[e("code",[t._v("gl.STREAM_READ")]),t._v(" : 缓冲区的内容可能不会经常使用。内容从缓冲区读取，但不写入。")]),t._v(" "),e("li",[e("code",[t._v("gl.STATIC_COPY")]),t._v(" : 缓冲区的内容可能经常使用，而不会经常更改。用户不会从缓冲区读取内容，也不写入。")]),t._v(" "),e("li",[e("code",[t._v("gl.DYNAMIC_COPY")]),t._v(" : 缓冲区的内容可能经常使用，并且经常更改。用户不会从缓冲区读取内容，也不写入。")]),t._v(" "),e("li",[e("code",[t._v("gl.STREAM_COPY")]),t._v(" : 缓冲区的内容可能不会经常使用。用户不会从缓冲区读取内容，也不写入。")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("srcOffset")]),t._v(" : "),e("code",[t._v("GLuint (en-US)")]),t._v(" 指定读取缓冲时的初始元素索引偏移量。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("length")]),t._v(" (可选) : "),e("code",[t._v("GLuint (en-US)")]),t._v(" 默认为 "),e("code",[t._v("0")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.vertexAttribPointer(index, size, type, normalized, stride, offset)")]),t._v(" 绑定当前缓冲区范围到 "),e("code",[t._v("gl.ARRAY_BUFFER")]),t._v(" ，成为当前顶点缓冲区对象的通用顶点属性并指定它的布局 (缓冲区对象中的偏移量)")]),t._v(" "),e("p",[t._v("告诉显卡从当前绑定的缓冲区（bindBuffer() 指定的缓冲区）中读取顶点数据")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("index")]),t._v(" : 指定要修改的顶点属性的索引。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("size")]),t._v(" : 指定每个顶点属性的组成数量，必须是 1，2，3 或 4。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("type")]),t._v(" : 指定数组中每个元素的数据类型")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.BYTE")]),t._v(" : 有符号的 8 位整数，范围 [-128, 127]")]),t._v(" "),e("li",[e("code",[t._v("gl.SHORT")]),t._v(" : 有符号的 16 位整数，范围 [-32768, 32767]")]),t._v(" "),e("li",[e("code",[t._v("gl.UNSIGNED_BYTE")]),t._v(": 无符号的 8 位整数，范围 [0, 255]")]),t._v(" "),e("li",[e("code",[t._v("gl.UNSIGNED_SHORT")]),t._v(" : 无符号的 16 位整数，范围 [0, 65535]")]),t._v(" "),e("li",[e("code",[t._v("gl.FLOAT")]),t._v(" : 32 位 IEEE 标准的浮点数")])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.HALF_FLOAT")]),t._v(" : 16 位 IEEE 标准的浮点数")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("normalized")]),t._v(" : 当转换为浮点数时是否应该将整数数值归一化到特定的范围。")]),t._v(" "),e("ul",[e("li",[t._v("对于类型 "),e("code",[t._v("gl.BYTE")]),t._v(" 和 "),e("code",[t._v("gl.SHORT")]),t._v(" ，如果是 true 则将值归一化为 [-1, 1]")]),t._v(" "),e("li",[t._v("对于类型 "),e("code",[t._v("gl.UNSIGNED_BYTE")]),t._v(" 和 "),e("code",[t._v("gl.UNSIGNED_SHORT")]),t._v(" ，如果是 true 则将值归一化为 [0, 1]")]),t._v(" "),e("li",[t._v("对于类型 "),e("code",[t._v("gl.FLOAT")]),t._v(" 和 "),e("code",[t._v("gl.HALF_FLOAT")]),t._v(" ，此参数无效")])])])]),t._v(" "),e("p",[e("code",[t._v("stride")]),t._v(" : 一个 "),e("code",[t._v("GLsizei (en-US)")]),t._v(" ，以字节为单位指定连续顶点属性开始之间的偏移量 (即数组中一行长度)。不能大于 255。如果 "),e("code",[t._v("stride")]),t._v(" 为 0，则假定该属性是紧密打包的，即不交错属性，每个属性在一个单独的块中，下一个顶点的属性紧跟当前顶点之后。")]),t._v(" "),e("p",[e("code",[t._v("offset")]),t._v(" : "),e("code",[t._v("GLintptr (en-US)")]),t._v(" 指定顶点属性数组中第一部分的字节偏移量。必须是类型的字节长度的倍数。")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.enableVertexAttribArray(index)")]),t._v(" 打开属性数组列表中指定索引处的通用顶点属性数组")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("index")]),t._v(" : 类型为 "),e("code",[t._v("GLuint (en-US)")]),t._v(" 的索引，指向要激活的顶点属性。如果您只知道属性的名称，不知道索引，可以使用以下方法来获取索引 "),e("code",[t._v("getAttribLocation()")])])]),t._v(" "),e("p",[e("code",[t._v("WebGL")]),t._v(" 使用 "),e("code",[t._v("attributes")]),t._v(" 来存储作用于顶点的数据。这些数据包含在 "),e("code",[t._v("JavaScript")]),t._v(" 代码中，并且只能在 "),e("code",[t._v("JavaScript")]),t._v(" 代码和顶点着色器中使用。当我们想要在顶点着色器中使用这些数据时，我们需要将其存储在 "),e("code",[t._v("attributes")]),t._v(" 中。")]),t._v(" "),e("p",[t._v("每个 "),e("code",[t._v("attribute")]),t._v(" 都有一个索引号，这个索引号用来引用在 "),e("code",[t._v("GPU")]),t._v(" 中维护的属性列表中的相应数据。在不同的平台或 "),e("code",[t._v("GPU")]),t._v(" 上，某些顶点属性索引可能具有预定义的值。这意味着在不同的硬件或平台上，使用相同的索引号来引用属性可能会导致不同的结果。")]),t._v(" "),e("p",[t._v("当我们创建一个 "),e("code",[t._v("attribute")]),t._v(" 时， "),e("code",[t._v("WebGL")]),t._v(" 层会为其分配一个属性索引号，以便我们可以使用它来引用属性数据。这个索引号是动态分配的，可以在运行时更改。")]),t._v(" "),e("p",[t._v("无论怎样，都需要你使用 "),e("code",[t._v("enableVertexAttribArray()")]),t._v(" 方法，来激活每一个属性以便使用，不被激活的属性是不会被使用的。")]),t._v(" "),e("p",[t._v("一旦激活，以下其他方法就可以获取到属性的值了，包括 "),e("code",[t._v("vertexAttribPointer()")]),t._v(" 、"),e("code",[t._v("vertexAttrib*()")]),t._v(" 和 "),e("code",[t._v("getVertexAttrib() (en-US)")]),t._v(" 。")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.vertexAttrib[1234]f[v]()")]),t._v(" 为顶点 "),e("code",[t._v("attibute")]),t._v(" 变量赋值")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib1f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib2f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib3f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib4f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib1fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib2fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib3fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib4fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[e("p",[e("code",[t._v("index")]),t._v(" : "),e("code",[t._v("GLuint (en-US)")]),t._v(" 类型，指定了待修改顶点 "),e("code",[t._v("attribute")]),t._v(" 变量的存储位置。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("v0, v1, v2, v3")]),t._v(" : 浮点数类型 "),e("code",[t._v("Number")]),t._v(" ，用于设置顶点 "),e("code",[t._v("attibute")]),t._v(" 变量的各分量值。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("value")]),t._v(" : "),e("code",[t._v("Float32Array")]),t._v(" 类型，用于设置顶点 "),e("code",[t._v("attibute")]),t._v(" 变量的向量值。")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getVertexAttrib(index, pname)")]),t._v(" 在给定位置返回关于顶点属性的信息")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("index")]),t._v(" : 指定顶点属性索引的 "),e("code",[t._v("GLuint")]),t._v(" 类型")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pname")]),t._v(" : 指定要查询的信息的 "),e("code",[t._v("GLenum")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")]),t._v(" : 返回当前绑定的 "),e("strong",[t._v("WebGLBuffer")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_ENABLED")]),t._v(" : 如果在此索引处启用了顶点属性，则返回一个为 "),e("code",[t._v("true")]),t._v(" 的 "),e("code",[t._v("GLboolean")]),t._v(" 。否则错误。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_SIZE")]),t._v(" : 返回一个指示顶点数组中元素大小的 "),e("code",[t._v("GLint")]),t._v(" 。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_STRIDE")]),t._v(" : 返回一个 "),e("code",[t._v("GLint")]),t._v(" ，指示数组中连续元素之间的字节数。 "),e("code",[t._v("0")]),t._v(" 表示元素是连续的。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_TYPE")]),t._v(" : 返回一个表示数组类型的 "),e("code",[t._v("GLenum")]),t._v(" 。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.BYTE")])]),t._v(" "),e("li",[e("code",[t._v("gl.UNSIGNED_BYTE")])]),t._v(" "),e("li",[e("code",[t._v("gl.SHORT")])]),t._v(" "),e("li",[e("code",[t._v("gl.UNSIGNED_SHORT")])]),t._v(" "),e("li",[e("code",[t._v("gl.FLOAT")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_NORMALIZED")]),t._v(" : 如果定点数据类型为给定索引处的顶点属性数组规范化，则返回一个为 "),e("code",[t._v("true")]),t._v(" 的 "),e("code",[t._v("GLboolean")]),t._v(" 。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.CURRENT_VERTEX_ATTRIB")]),t._v(" : 返回一个 "),e("code",[t._v("Float32Array")]),t._v(" (包含4个元素)，表示给定索引处顶点属性的当前值。")])])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_INTEGER")]),t._v(" : 返回一个 "),e("code",[t._v("GLboolean")]),t._v(" ，指示给定索引处的顶点属性数组中是否存在整数数据类型。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("gl.VERTEX_ATTRIB_ARRAY_DIVISOR")]),t._v(" : 返回一个描述用于实例渲染的频率除数的 "),e("code",[t._v("GLint")]),t._v(" 。")])])]),t._v(" "),e("p",[t._v("当使用 "),e("code",[t._v("ANGLE_instanced_arrays")]),t._v(" 扩展时:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE")]),t._v(" : 返回一个描述用于实例渲染的频率除数的 "),e("code",[t._v("GLint")]),t._v(" 。")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.enable(cap)")]),t._v(" 对该上下文开启某种特性")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("cap")]),t._v(" : 让 WebGL 开启某种特性")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.BLEND")]),t._v(" : 激活片元的颜色融合计算。参见 WebGLRenderingContext.blendFunc().")]),t._v(" "),e("li",[e("code",[t._v("gl.CULL_FACE")]),t._v(" : 激活多边形正反面剔除。参见WebGLRenderingContext.cullFace().")]),t._v(" "),e("li",[e("code",[t._v("gl.DEPTH_TEST")]),t._v(" : 激活深度比较，并且更新深度缓冲区。参见WebGLRenderingContext.depthFunc().")]),t._v(" "),e("li",[e("code",[t._v("gl.DITHER")]),t._v(" : 激活在写入颜色缓冲区之前，抖动颜色成分。")]),t._v(" "),e("li",[e("code",[t._v("gl.POLYGON_OFFSET_FILL")]),t._v(" : 激活添加多边形片段的深度值偏移。参见WebGLRenderingContext.polygonOffset().")]),t._v(" "),e("li",[e("code",[t._v("gl.SAMPLE_ALPHA_TO_COVERAGE")]),t._v(" : 激活通过 alpha 值决定的临时覆盖值计算。（抗锯齿）")]),t._v(" "),e("li",[e("code",[t._v("gl.SAMPLE_COVERAGE")]),t._v(" : 激活使用临时覆盖值，位和运算片段的覆盖值。参见 WebGLRenderingContext.sampleCoverage() (en-US).")]),t._v(" "),e("li",[e("code",[t._v("gl.SCISSOR_TEST")]),t._v(" : 激活剪裁测试，即丢弃在剪裁矩形范围外的片段。WebGLRenderingContext.scissor().")]),t._v(" "),e("li",[e("code",[t._v("gl.STENCIL_TEST")]),t._v(" : 激活模板测试并且更新模板缓冲区。参见WebGLRenderingContext.stencilFunc() (en-US).")])]),t._v(" "),e("p",[t._v("(当使用 WebGL 2 context)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.RASTERIZER_DISCARD")]),t._v(" : 图元光栅化阶段之前，但在任意的 "),e("code",[t._v("transform")]),t._v(" 反馈之后，就立刻被丢弃。"),e("code",[t._v("gl.clear()")]),t._v(" 命令被忽略。")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.viewport(x, y, width, height)")]),t._v(" 用来设置视口，即指定从标准设备到窗口坐标的 x、y 仿射变换")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("x")]),t._v(" : 用来设定视口的左下角水平坐标 默认值："),e("code",[t._v("0")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("y")]),t._v(" : 用来设定视口的左下角垂直坐标 默认值："),e("code",[t._v("0")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("width")]),t._v(" : 非负数，用来设定视口的宽度。默认值："),e("code",[t._v("canvas")]),t._v(" 的宽度")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("height")]),t._v(" : 非负数，用来设定视口的高度。默认值："),e("code",[t._v("canvas")]),t._v(" 的高度")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.uniform[1234][fi][v]()")]),t._v(" 指定 "),e("code",[t._v("uniform")]),t._v(" 变量的值")]),t._v(" "),e("p",[t._v("所有在 "),e("code",[t._v("ShaderProgram")]),t._v(" 对象中定义的，且激活的 "),e("code",[t._v("uniform")]),t._v(" 变量在 "),e("code",[t._v("ShaderProgram")]),t._v(" 执行 "),e("code",[t._v("link")]),t._v(" 成功后被初始化为 "),e("code",[t._v("0")])]),t._v(" "),e("p",[t._v("它们将保留通过调用此方法分配给它们的值，直到再次将其初始化为 "),e("code",[t._v("0")]),t._v(" 时，也就是 "),e("code",[t._v("ShaderProgram")]),t._v(" 对象上发生下一次成功的 "),e("code",[t._v("link")]),t._v(" 操作为止")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform1f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform1fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform1i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform1iv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform2f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform2fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform2i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform2iv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform3f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform3fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform3i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform3iv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform4f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform4fv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform4i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform4iv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[e("p",[e("code",[t._v("location")]),t._v(" : "),e("code",[t._v("WebGLUniformLocation")]),t._v(" 对象包含了将要修改的 "),e("code",[t._v("uniform")]),t._v(" 属性位置")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("value, v0, v1, v2, v3")]),t._v(" : 新的值将被用于 "),e("code",[t._v("uniform")]),t._v(" 变量")]),t._v(" "),e("ul",[e("li",[t._v("浮点值 "),e("code",[t._v("Number")]),t._v(' (方法名跟" '),e("code",[t._v("f")]),t._v(' ")')]),t._v(" "),e("li",[t._v("浮点数组 (例如 "),e("code",[t._v("Float32Array")]),t._v(" 或 "),e("code",[t._v("Array")]),t._v(' 的数组) 用于浮点型向量方法 (方法名跟 " '),e("code",[t._v("fv")]),t._v(' ")')]),t._v(" "),e("li",[t._v("整型值 "),e("code",[t._v("Number")]),t._v(' (方法名跟" '),e("code",[t._v("i")]),t._v(' ")')]),t._v(" "),e("li",[t._v("整型数组 "),e("code",[t._v("Int32Array")]),t._v(' 用于整型向量方法 (方法名跟 " '),e("code",[t._v("iv")]),t._v(' ")')])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.createShader(type)")]),t._v(" 创建一个 "),e("code",[t._v("WebGLShader")]),t._v(" 着色器对象，该对象可以使用 "),e("code",[t._v("WebGLRenderingContext.shaderSource()")]),t._v(" 和 "),e("code",[t._v("WebGLRenderingContext.compileShader()")]),t._v(" 方法配置着色器代码")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("type")]),t._v(" : 参数为 "),e("code",[t._v("gl.VERTEX_SHADER")]),t._v(" 或 "),e("code",[t._v("gl.FRAGMENT_SHADER")]),t._v(" 两者中的一个")])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.shaderSource(shader, source)")]),t._v(" 设置 "),e("code",[t._v("WebGLShader")]),t._v(" 着色器（顶点着色器及片元着色器）的 "),e("code",[t._v("GLSL")]),t._v(" 程序代码")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("shader")]),t._v(" : 用于设置程序代码的 "),e("code",[t._v("WebGLShader")]),t._v("（着色器对象）")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("source")]),t._v(" : 包含 "),e("code",[t._v("GLSL")]),t._v(" 程序代码的字符串")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.compileShader(shader)")]),t._v(" 用于编译一个 "),e("code",[t._v("GLSL")]),t._v(" 着色器，使其成为为二进制数据，然后就可以被 "),e("code",[t._v("WebGLProgram")]),t._v(" 对象所使用")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("shader")]),t._v(" : 一个片元或顶点着色器（ "),e("code",[t._v("WebGLShader")]),t._v(" ）")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" shader "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERTEX_SHADER")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shaderSource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shaderSource"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("compileShader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getShaderParameter(shader, pname)")]),t._v(" 返回给定的着色器信息")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("shader")]),t._v(" : 需要获取信息的着色器对象")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pname")]),t._v(" : 指定要查询的信息属性名称")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.DELETE_STATUS")]),t._v(" : 标示着色器是否被删除，删除（ "),e("code",[t._v("GL_TRUE")]),t._v(" ）未删除（ "),e("code",[t._v("GL_FALSE")]),t._v(" ）")]),t._v(" "),e("li",[e("code",[t._v("gl.COMPILE_STATUS")]),t._v(" : 标示着色器是否编译成功，是（"),e("code",[t._v("GL_TRUE")]),t._v(" ）不是（ "),e("code",[t._v("GL_FALSE")]),t._v(" ）")]),t._v(" "),e("li",[e("code",[t._v("gl.SHADER_TYPE")]),t._v(" : 标示着色器类型，是顶点着色器 ( "),e("code",[t._v("gl.VERTEX_SHADER")]),t._v(" ) 还是片段着色器 ( "),e("code",[t._v("gl.FRAGMENT_SHADER")]),t._v(" )")])])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getShaderInfoLog(shader, maxLength, *length, *infoLog)")]),t._v(" 返回着色器对象的信息日志")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("shader")]),t._v(" : 指定要查询其信息日志的着色器对象")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("maxLength")]),t._v(" : 指定用于存储返回信息日志的字符缓冲区的大小")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("shader")]),t._v(" : 返回 "),e("code",[t._v("infoLog")]),t._v(" 中返回的字符串的长度(不包括空终止符)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("shader")]),t._v(" : 指定用于返回信息日志的字符数组")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getAttribLocation(program, name)")]),t._v(" 返回了给定 "),e("code",[t._v("WebGLProgram")]),t._v(" 对象中某属性的下标指向位置")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("program")]),t._v(" : 一个包含了属性参数的 "),e("code",[t._v("WebGLProgram")]),t._v(" 对象")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("name")]),t._v(" : 需要获取下标指向位置的 "),e("code",[t._v("DOMString")]),t._v(" 属性参数名")])])]),t._v(" "),e("p",[t._v("返回值 : 表明属性位置的下标 "),e("code",[t._v("GLint")]),t._v(" 数字，如果找不到该属性则返回 "),e("code",[t._v("-1")])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.getUniformLocation(program, name)")]),t._v(" 返回统一变量的位置")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("program")]),t._v(" : 指定要查询的程序对象")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("name")]),t._v(" : 指向一个以空结尾的字符串，该字符串包含要查询其位置的统一变量的名称")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.useProgram(program)")]),t._v(" 将定义好的 "),e("code",[t._v("WebGLProgram")]),t._v(" 对象添加到当前的渲染状态中")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("program")]),t._v(" : 需要添加的 "),e("code",[t._v("WebGLProgram")]),t._v(" 对象")])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("WebGLRenderingContext.drawArrays(mode, first, count)")]),t._v(" 从向量数组中绘制图元")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("mode")]),t._v(" : "),e("code",[t._v("GLenum (en-US)")]),t._v(" 类型，指定绘制图元的方式")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("gl.POINTS")]),t._v(" : 绘制一系列点")]),t._v(" "),e("li",[e("code",[t._v("gl.LINE_STRIP")]),t._v(" : 绘制一个线条。即，绘制一系列线段，上一点连接下一点")]),t._v(" "),e("li",[e("code",[t._v("gl.LINE_LOOP")]),t._v(" : 绘制一个线圈。即，绘制一系列线段，上一点连接下一点，并且最后一点与第一个点相连")]),t._v(" "),e("li",[e("code",[t._v("gl.LINES")]),t._v(" : 绘制一系列单独线段。每两个点作为端点，线段之间不连接")]),t._v(" "),e("li",[e("code",[t._v("gl.TRIANGLE_STRIP")]),t._v(" : 绘制一个三角带")]),t._v(" "),e("li",[e("code",[t._v("gl.TRIANGLE_FAN")]),t._v(" : 绘制一个三角扇")]),t._v(" "),e("li",[e("code",[t._v("gl.TRIANGLES")]),t._v(" : 绘制一系列三角形。每三个点作为顶点")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("first")]),t._v(" : "),e("code",[t._v("GLenum (en-US)")]),t._v(" 类型，指定从哪个点开始绘制")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("count")]),t._v(" : "),e("code",[t._v("GLenum (en-US)")]),t._v(" 类型，指定绘制需要使用到多少个点")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);