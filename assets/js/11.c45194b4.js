(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{290:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"opengl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opengl"}},[t._v("#")]),t._v(" OpenGL")]),t._v(" "),a("h2",{attrs:{id:"着色器语言-glsl-opengl-shader-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#着色器语言-glsl-opengl-shader-language"}},[t._v("#")]),t._v(" 着色器语言 "),a("code",[t._v("GLSL")]),t._v(" (opengl-shader-language)")]),t._v(" "),a("h3",{attrs:{id:"基本类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空类型,即不返回任何值")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔类型 true,false")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("带符号的整数 signed integer")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("带符号的浮点数 floating scalar")])]),t._v(" "),a("tr",[a("td",[t._v("vec2, vec3, vec4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n维浮点数向量 n-component floating point vector")])]),t._v(" "),a("tr",[a("td",[t._v("bvec2, bvec3, bvec4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n维布尔向量 Boolean vector")])]),t._v(" "),a("tr",[a("td",[t._v("ivec2, ivec3, ivec4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n维整数向量 signed integer vector")])]),t._v(" "),a("tr",[a("td",[t._v("mat2, mat3, mat4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2x2, 3x3, 4x4 浮点数矩阵 float matrix")])]),t._v(" "),a("tr",[a("td",[t._v("sampler2D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2D纹理 a 2D texture")])]),t._v(" "),a("tr",[a("td",[t._v("samplerCube")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("盒纹理 cube mapped texture")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空类型,即不返回任何值")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔类型 true,false")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空类型,即不返回任何值")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔类型 true,false")])])])]),t._v(" "),a("h3",{attrs:{id:"基本结构和数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本结构和数组"}},[t._v("#")]),t._v(" 基本结构和数组")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("结构")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("struct type-name{} 类似c语言中的 结构体")])]),t._v(" "),a("tr",[a("td",[t._v("数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("float foo[3] glsl只支持1维数组,数组可以是结构体的成员")])])])]),t._v(" "),a("h3",{attrs:{id:"向量的分量访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向量的分量访问"}},[t._v("#")]),t._v(" 向量的分量访问")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 中的向量( "),a("code",[t._v("vec2")]),t._v(" , "),a("code",[t._v("vec3")]),t._v(" , "),a("code",[t._v("vec4")]),t._v(" )")]),t._v(" "),a("p",[t._v("可能代表了一个空间坐标( "),a("code",[t._v("x")]),t._v(" , "),a("code",[t._v("y")]),t._v(" , "),a("code",[t._v("z")]),t._v(" , "),a("code",[t._v("w")]),t._v(")")]),t._v(" "),a("p",[t._v("可能代表了一个颜色( "),a("code",[t._v("r")]),t._v(" , "),a("code",[t._v("g")]),t._v(" , "),a("code",[t._v("b")]),t._v(" , "),a("code",[t._v("a")]),t._v(" )")]),t._v(" "),a("p",[t._v("可能代表了一个纹理坐标( "),a("code",[t._v("s")]),t._v(" , "),a("code",[t._v("t")]),t._v(" , "),a("code",[t._v("p")]),t._v(" , "),a("code",[t._v("q")]),t._v(" )")]),t._v(" "),a("p",[t._v("所以 "),a("code",[t._v("GLSL")]),t._v(" 提供了一些更人性化的分量访问方式.")]),t._v(" "),a("p",[a("code",[t._v("vector.xyzw")]),t._v(" 其中 "),a("code",[t._v("xyzw")]),t._v(" 可以任意组合")]),t._v(" "),a("p",[a("code",[t._v("vector.rgba")]),t._v(" 其中 "),a("code",[t._v("rgba")]),t._v(" 可以任意组合")]),t._v(" "),a("p",[a("code",[t._v("vector.stpq")]),t._v(" 其中 "),a("code",[t._v("rgba")]),t._v(" 可以任意组合")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.0")]),t._v("\nfloat x1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.0")]),t._v("\nfloat x2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.0")]),t._v("\n\nvec3 xyz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xyz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vec3(1.0,2.0,3.0)")]),t._v("\nvec3 xyz1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vec3(1.0,2.0,3.0)")]),t._v("\nvec3 rgb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vec3(1.0,2.0,3.0)")]),t._v("\n\nvec2 xyzw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xyzw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vec4(1.0,2.0,3.0,1.0);")]),t._v("\nvec2 rgba "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgba"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vec4(1.0,2.0,3.0,1.0);")]),t._v("\n")])])]),a("h3",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("优先级(越小越高)")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("结合性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("聚组:a*(b+c)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("N / A")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[] () . ++ –")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数组下标__[],方法参数__fun(arg1,arg2,arg3),属性访问__a.b__,自增/减后缀__a++ a–__")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("++ – + - !")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("自增/减前缀__++a --a__,正负号(一般正号不写)a ,-a,取反__!false__")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R - L")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("* /")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("乘除数学运算")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("+ -")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("加减数学运算")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("< > <= >=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("关系运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("== !=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相等性运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("12")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑与")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("^^")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑排他或(用处基本等于!=)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑或")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("15")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("? :")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("三目运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("= += -= *= /=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("赋值与复合赋值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])]),t._v(" "),a("tr",[a("td",[t._v("17")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v(",")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("顺序分配运算")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("L - R")])])])]),t._v(" "),a("p",[a("em",[t._v("左值与右值：")])]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("左值：表示一个储存位置,可以是变量,也可以是表达式,但表达式最后的结果必须是一个储存位置.\n\n右值：表示一个值, 可以是一个变量或者表达式再或者纯粹的值.\n\n操作符的优先级：决定含有多个操作符的表达式的求值顺序，每个操作的优先级不同.\n\n操作符的结合性：决定相同优先级的操作符是从左到右计算，还是从右到左计算。\n")])])]),a("h3",{attrs:{id:"基础类型间的运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础类型间的运算"}},[t._v("#")]),t._v(" 基础类型间的运算")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 中，没有隐式类型转换，原则上 "),a("code",[t._v("GLSL")]),t._v(" 要求任何表达式左右两侧( "),a("code",[t._v("l-value")]),t._v(" )，( "),a("code",[t._v("r-value")]),t._v(" )的类型必须一致")]),t._v(" "),a("p",[t._v("以下表达式都是错误的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("int a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误,r-value为float 而 lvalue 为int.")]),t._v("\nint a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbool a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nvec3 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("float")]),t._v(" 与 "),a("code",[t._v("int")]),t._v(" ：")]),t._v(" "),a("p",[a("code",[t._v("float")]),t._v(" 与 "),a("code",[t._v("float")]),t._v(" , "),a("code",[t._v("int")]),t._v(" 与 "),a("code",[t._v("int")]),t._v(" 之间是可以直接运算的，但 "),a("code",[t._v("float")]),t._v(" 与 "),a("code",[t._v("int")]),t._v(" 不行。它们需要进行一次显示转换。")]),t._v(" "),a("p",[t._v("把 "),a("code",[t._v("float")]),t._v(" 转成 "),a("code",[t._v("int")]),t._v(" ： "),a("code",[t._v("int(1.0)")]),t._v(" || 把 "),a("code",[t._v("int")]),t._v(" 转成 "),a("code",[t._v("float")]),t._v(" ： "),a("code",[t._v("float(1)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("int a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nint a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("float")]),t._v(" 与 "),a("code",[t._v("vec")]),t._v(" (向量) "),a("code",[t._v("mat")]),t._v(" (矩阵)：\n"),a("code",[t._v("vec")]),t._v(" 、"),a("code",[t._v("mat")]),t._v(" 这些类型其实是由 "),a("code",[t._v("float")]),t._v(" 复合而成的，当它们与 "),a("code",[t._v("float")]),t._v(" 运算时，其实就是在每一个分量上分别与 "),a("code",[t._v("float")]),t._v(" 进行运算，这就是逐分量运算")]),t._v(" "),a("p",[t._v("逐分量运算是线性的，这就是说 "),a("code",[t._v("vec")]),t._v(" 与 "),a("code",[t._v("float")]),t._v(" 的运算结果是还是 "),a("code",[t._v("vec")])]),t._v(" "),a("p",[a("code",[t._v("int")]),t._v(" 与 "),a("code",[t._v("vec")]),t._v(" 、"),a("code",[t._v("mat")]),t._v(" 之间是不可运算的 ，因为 "),a("code",[t._v("vec")]),t._v(" 和 "),a("code",[t._v("mat")]),t._v(" 中的每一个分量都是 "),a("code",[t._v("float")]),t._v(" 类型的，无法与 "),a("code",[t._v("int")]),t._v(" 进行逐分量计算")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec3 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmat3 m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec3 b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vec3(10.0, 20.0, 30.0)")]),t._v("\nvec3 c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vec3(10.0, 20.0, 30.0)")]),t._v("\nmat3 m2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = mat3(10.0)")]),t._v("\nmat3 m3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = mat3(10.0)")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("vec")]),t._v(" (向量) 与 "),a("code",[t._v("vec")]),t._v(" (向量)：\n两向量间的运算首先要保证操作数的阶数都相同，否则不能计算。例如："),a("code",[t._v("vec3*vec2")]),t._v(" "),a("code",[t._v("vec4+vec3")]),t._v(" 等等都是不行的\n两操作数在同位置上的分量分别进行运算,其本质还是逐分量进行的\n"),a("code",[t._v("vec")]),t._v("  与 "),a("code",[t._v("vec")]),t._v(" 运算结果是 "),a("code",[t._v("vec")]),t._v(" ， 且阶数不变")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec3 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec3 b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec3 c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = vec3(1.1, 2.2, 3.3)")]),t._v("\nvec3 d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = vec3(0.1, 0.4, 0.9)")]),t._v("\n")])])])])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/vec-vec.png"),alt:""}}),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("vec")]),t._v(" (向量) 与 "),a("code",[t._v("mat")]),t._v(" (矩阵)：\n要保证操作数的阶数相同，且 "),a("code",[t._v("vec")]),t._v(" 与 "),a("code",[t._v("mat")]),t._v(" 间只存在乘法运算\n它们的计算方式和线性代数中的矩阵乘法相同，不是逐分量运算")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec2 v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmat2 m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec2 w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = vec2(1. * 10. + 3. * 20., 2. * 10. + 4. * 20.)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\nvec2 v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmat2 m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec2 w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = vec2(1. * 10. + 2. * 20., 3. * 10. + 4. * 20.)")]),t._v("\n")])])]),a("p",[t._v("向量与矩阵的乘法规则：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/vec-mat.png"),alt:""}}),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/vec-mat2.png"),alt:""}})]),t._v(" "),a("li",[a("p",[a("code",[t._v("mat")]),t._v(" (矩阵) 与 "),a("code",[t._v("mat")]),t._v(" (矩阵)：\n要保证操作数的阶数相同")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("mat")]),t._v(" 与 "),a("code",[t._v("mat")]),t._v(" 的运算中，除了乘法是线性代数中的矩阵乘法外，其余的运算任为逐分量运算\n只有乘法是特殊的，其余都和 "),a("code",[t._v("vec")]),t._v(" 与 "),a("code",[t._v("vec")]),t._v(" 运算类似")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mat2 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmat2 b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmat2 c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mat2(1.*10.+3.*20.,2.*10.+4.*20.,1.* 30.+3.*40.,2.* 30.+4.*40.);")]),t._v("\n\nmat2 d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mat2(1.+10.,2.+20.,3.+30.,4.+40);")]),t._v("\n")])])]),a("p",[t._v("矩阵乘法规则：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/mat-mat.png"),alt:""}})])]),t._v(" "),a("h3",{attrs:{id:"变量限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量限定符"}},[t._v("#")]),t._v(" 变量限定符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("修饰符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("none")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(默认的可省略)本地变量,可读可写,函数的输入参数既是这种类型")])]),t._v(" "),a("tr",[a("td",[t._v("const")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("声明变量或函数的参数为只读类型")])]),t._v(" "),a("tr",[a("td",[t._v("attribute")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只能存在于 vertex shader 中,一般用于保存顶点或法线数据,它可以在数据缓冲区中读取数据")])]),t._v(" "),a("tr",[a("td",[t._v("uniform")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在运行时 shader 无法改变 uniform 变量, 一般用来放置程序传递给 shader 的变换矩阵，材质，光照参数等等")])]),t._v(" "),a("tr",[a("td",[t._v("varying")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("主要负责在 vertex 和 fragment 之间传递变量")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("const：\n被 "),a("code",[t._v("const")]),t._v(" 限定符修饰的变量初始化后不可变，除了局部变量，函数参数也可以使用 "),a("code",[t._v("const")]),t._v(" 修饰符\n结构变量可以用 `const``修饰，但结构中的字段不行")]),t._v(" "),a("p",[a("code",[t._v("const")]),t._v(" 变量必须在声明时就初始化 "),a("code",[t._v("const vec3 v3 = vec3(0.,0.,0.)")])]),t._v(" "),a("p",[t._v("局部变量只能使用 "),a("code",[t._v("const")]),t._v(" 限定符\n函数参数只能使用 "),a("code",[t._v("const")]),t._v(" 限定符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("struct light "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      vec4 color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      vec3 pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//const vec3 pos1; //结构中的字段不可用const修饰会报错.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" light lgt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("light")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结构变量可以用const修饰")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("attribute：\n"),a("code",[t._v("attribute")]),t._v(" 变量是全局且只读的，它只能在 "),a("code",[t._v("vertex shader")]),t._v(" 中使用，只能与浮点数、向量或矩阵变量组合，\n一般 "),a("code",[t._v("attribute")]),t._v(" 变量用来放置程序传递来的模型顶点、法线、颜色、纹理等数据，它可以访问数据缓冲区")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("attribute vec4 a_Position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("uniform：\n"),a("code",[t._v("uniform")]),t._v(" 变量是全局且只读的，在整个 "),a("code",[t._v("shader")]),t._v(" 执行完毕前其值不会改变，可以和任意基本类型变量组合，\n一般使用 "),a("code",[t._v("uniform")]),t._v(" 变量来放置外部程序传递来的环境数据(如点光源位置、模型的变换矩阵等等)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("uniform vec4 lightPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("varying：\n"),a("code",[t._v("varying")]),t._v(" 类型变量是 "),a("code",[t._v("vertex shader")]),t._v(" 与 "),a("code",[t._v("fragment shader")]),t._v(" 之间的信使，一般在 "),a("code",[t._v("vertex shader")]),t._v(" 中修改它然后在 "),a("code",[t._v("fragment shader")]),t._v(" 使用它，但不能在 "),a("code",[t._v("fragment shader")]),t._v(" 中修改它")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//顶点着色器")]),t._v("\nvarying vec4 v_Color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    v_Color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//片元着色器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nvarying vec4 v_Color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  gl_FragColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v_Color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("全局变量限制符只能为 "),a("code",[t._v("const")]),t._v(" 、"),a("code",[t._v("attribute")]),t._v(" 、"),a("code",[t._v("uniform")]),t._v(" 和 "),a("code",[t._v("varying")]),t._v(" 中的一个  不可复合")])])]),t._v(" "),a("h3",{attrs:{id:"函数参数限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数参数限定符"}},[t._v("#")]),t._v(" 函数参数限定符")]),t._v(" "),a("p",[t._v("函数的参数默认是以拷贝的形式传递的，也就是值传递，任何传递给函数参数的变量，其值都会被复制一份，然后再交给函数内部进行处理\n我们可以为参数添加限定符来达到传递引用的目的")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("限定符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("< none: default >")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("默认使用 in 限定符")])]),t._v(" "),a("tr",[a("td",[t._v("in")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("复制到函数中在函数中可读写")])]),t._v(" "),a("tr",[a("td",[t._v("out")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回时从函数中复制出来")])]),t._v(" "),a("tr",[a("td",[t._v("inout")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("复制到函数中并在返回时复制出来")])])])]),t._v(" "),a("p",[a("code",[t._v("in")]),t._v(" 是函数参数的默认限定符，最终真正传入函数形参的其实是实参的一份拷贝。在函数中，修改 "),a("code",[t._v("in")]),t._v(" 修饰的形参不会影响到实参变量本身")]),t._v(" "),a("p",[a("code",[t._v("out")]),t._v(" 它的作用是向函数外部传递新值， "),a("code",[t._v("out")]),t._v(" 模式下传递进来的参数是 "),a("code",[t._v("write-only")]),t._v(' 的(可写不可读)。就像是一个"坑位"，坑位中的值需要函数给他赋予\n在函数中，修改 '),a("code",[t._v("out")]),t._v(" 修饰的形参会影响到实参本身")]),t._v(" "),a("p",[a("code",[t._v("inout")]),t._v(' 形参可以被理解为是一个带值的"坑位"，及可读也可写，在函数中，修改 '),a("code",[t._v("inout")]),t._v(" 修饰的形参会影响到实参本身")]),t._v(" "),a("h3",{attrs:{id:"glsl-的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glsl-的函数"}},[t._v("#")]),t._v(" "),a("code",[t._v("GLSL")]),t._v(" 的函数")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 允许在程序的最外部声明函数。函数不能嵌套，不能递归调用，且必须声明返回值类型(无返回值时声明为void)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPosition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    vec4 v4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" v4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("inout float size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    float psize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("psize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gl_Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPosition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gl_PointSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" psize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 中变量可以在声明的时候初始化，"),a("code",[t._v("float pSize = 10.0")]),t._v(" 也可以先声明然后等需要的时候在进行赋值")]),t._v(" "),a("p",[t._v("聚合类型对象如(向量、矩阵、数组、结构) 需要使用其构造函数来进行初始化")]),t._v(" "),a("p",[a("code",[t._v("vec4 color = vec4(0.0, 1.0, 0.0, 1.0);")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一般类型")]),t._v("\nfloat pSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat pSize1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npSize1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复合类型")]),t._v("\nvec4 color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 color1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncolor1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结构")]),t._v("\nstruct light "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    float intensity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    vec3 position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlight lightVar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("light")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" float c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" float"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 可以使用构造函数进行显式类型转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("bool t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbool f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nint a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true转换为1或1.0")]),t._v("\nint a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false转换为0或0.0")]),t._v("\n\nfloat b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfloat b1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbool c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0或0.0转换为false")]),t._v("\nbool c1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非0转换为true")]),t._v("\n\nbool d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbool d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"精度限定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精度限定"}},[t._v("#")]),t._v(" 精度限定")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 在进行光栅化着色的时候，会产生大量的浮点数运算，这些运算可能是当前设备所不能承受的，所以 "),a("code",[t._v("GLSL")]),t._v(" 提供了3种浮点数精度，我们可以根据不同的设备来使用合适的精度")]),t._v(" "),a("p",[t._v("在变量前面加上 "),a("code",[t._v("highp")]),t._v(" "),a("code",[t._v("mediump")]),t._v(" "),a("code",[t._v("lowp")]),t._v(" 即可完成对该变量的精度声明")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("lowp float color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvarying mediump vec2 Coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlowp ivec2 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lowp mat3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhighp mat4 m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("一般在片元着色器( "),a("code",[t._v("fragment shader")]),t._v(" )最开始的地方加上 "),a("code",[t._v("precision mediump float;")]),t._v(" 便设定了默认的精度")]),t._v(" "),a("p",[t._v("这样所有没有显式表明精度的变量都会按照设定好的默认精度来处理")]),t._v(" "),a("p",[a("strong",[t._v("如何确定精度：")])]),t._v(" "),a("p",[t._v("变量的精度首先是由精度限定符决定的，如果没有精度限定符，则要寻找其右侧表达式中，已经确定精度的变量，一旦找到，那么整个表达式都将在该精度下运行")]),t._v(" "),a("p",[t._v("如果找到多个，则选择精度较高的那种，如果一个都找不到，则使用默认或更大的精度类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("uniform highp float h1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhighp float h2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算过程和结果都 是高精度")]),t._v("\nmediump float m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" h1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" h2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算过程 是高精度")]),t._v("\nh2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" h1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算过程 是高精度")]),t._v("\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h2 – h1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算过程 是高精度")]),t._v("\nh2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算过程和结果都 是中等精度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("highp float p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 形参 p 是高精度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传入的 3.3是高精度")]),t._v("\n")])])]),a("p",[a("strong",[t._v("invariant关键字：")])]),t._v(" "),a("p",[t._v("由于 "),a("code",[t._v("shader")]),t._v(" 在编译时会进行一些内部优化，可能会导致同样的运算在不同 "),a("code",[t._v("shader")]),t._v(" 里结果不一定精确相等")]),t._v(" "),a("p",[t._v("所以需要使用 "),a("code",[t._v("invariant")]),t._v(" 关键字来显式要求计算结果必须精确一致")]),t._v(" "),a("p",[t._v("可使用 "),a("code",[t._v("#pragma STDGL invariant(all)")]),t._v(" 来命令所有输出变量必须精确一致，但这样会限制编译器优化程度，降低性能")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("#pragma "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STDGL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invariant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所有输出变量为 invariant")]),t._v("\ninvariant varying texCoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//varying在传递数据的时候声明为invariant")]),t._v("\n")])])]),a("p",[a("strong",[t._v("限定符的顺序：")])]),t._v(" "),a("p",[t._v("当需要用到多个限定符的时候要遵循以下顺序：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在一般变量中："),a("code",[t._v("invariant")]),t._v(" > "),a("code",[t._v("storage")]),t._v(" > "),a("code",[t._v("precision")])])]),t._v(" "),a("li",[a("p",[t._v("在参数中："),a("code",[t._v("storage")]),t._v(" > "),a("code",[t._v("parameter")]),t._v(" > "),a("code",[t._v("precision")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("invariant varying lowp float color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// invariant > storage > precision")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" lowp float s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//storage > parameter > precision")]),t._v("\n    float s1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("预编译指令：")])]),t._v(" "),a("p",[t._v("以 "),a("code",[t._v("#")]),t._v(" 开头的是预编译指令")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("#define #undef #"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" #ifdef #ifndef #"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n#elif #endif #error #pragma #extension #version #line\n")])])]),a("p",[a("code",[t._v("#version 100")]),t._v(" 意思是规定当前 "),a("code",[t._v("shader")]),t._v(" 使用 "),a("code",[t._v("GLSL ES 1.00")]),t._v(" 标准进行编译，如果使用这条预编译指令，则他必须出现在程序的最开始位置")]),t._v(" "),a("p",[a("strong",[t._v("内置的宏：")])]),t._v(" "),a("p",[a("code",[t._v("__LINE__")]),t._v(" ：当前源码中的行号")]),t._v(" "),a("p",[a("code",[t._v("__VERSION__")]),t._v(" ：一个整数，指示当前的 "),a("code",[t._v("GLSL")]),t._v(" 版本 比如 100 ps: 100 = v1.00")]),t._v(" "),a("p",[a("code",[t._v("GL_ES")]),t._v(" ：如果当前是在 "),a("code",[t._v("OPGL ES")]),t._v(" 环境中运行则 "),a("code",[t._v("GL_ES")]),t._v(" 被设置成1，一般用来检查当前环境是不是 "),a("code",[t._v("OPENGL ES")])]),t._v(" "),a("p",[a("code",[t._v("GL_FRAGMENT_PRECISION_HIGH")]),t._v(" ：如果当前系统glsl的片元着色器支持高浮点精度，则设置为1。一般用于检查着色器精度")]),t._v(" "),a("p",[t._v("1.如何通过判断系统环境,来选择合适的精度")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("#ifdef "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GL_ES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n#ifdef "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GL_FRAGMENT_PRECISION_HIGH")]),t._v("\nprecision highp float"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\nprecision mediump float"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#endif\n#endif\n")])])]),a("p",[t._v("2.自定义宏")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("#define "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n#"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n#endif\n")])])]),a("h3",{attrs:{id:"内置的特殊变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置的特殊变量"}},[t._v("#")]),t._v(" 内置的特殊变量")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 程序使用一些特殊的内置变量与硬件进行沟通")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("input")]),t._v(" 类型，负责向硬件(渲染管线)发送数据")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("output")]),t._v(" 类型，负责向程序回传数据，以便编程时需要")])])]),t._v(" "),a("p",[a("strong",[t._v("在 "),a("code",[t._v("vertex Shader")]),t._v(" 中：")])]),t._v(" "),a("p",[a("code",[t._v("output")]),t._v(" 类型的内置变量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("单位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("highp vec4 "),a("code",[t._v("gl_Position")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("gl_Position 放置顶点坐标信息")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("vec4")])]),t._v(" "),a("tr",[a("td",[t._v("mediump float "),a("code",[t._v("gl_PointSize")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("gl_PointSize 需要绘制点的大小，(只在 "),a("code",[t._v("gl.POINTS")]),t._v(" 模式下有效)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("float")])]),t._v(" "),a("tr",[a("td",[t._v("mediump float "),a("code",[t._v("gl_PointSize")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("gl_PointSize 需要绘制点的大小，(只在 "),a("code",[t._v("gl.POINTS")]),t._v(" 模式下有效)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("float")])])])]),t._v(" "),a("p",[a("strong",[t._v("在 "),a("code",[t._v("fragment Shader")]),t._v(" 中：")])]),t._v(" "),a("p",[a("code",[t._v("input")]),t._v(" 类型的内置变量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("单位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("mediump vec4 "),a("code",[t._v("gl_FragCoord")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("片元在 framebuffer 画面的相对位置")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("vec4")])]),t._v(" "),a("tr",[a("td",[t._v("bool "),a("code",[t._v("gl_FrontFacing")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("标志当前图元是不是正面图元的一部分")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")])]),t._v(" "),a("tr",[a("td",[t._v("mediump vec2 "),a("code",[t._v("gl_PointCoord")]),t._v(";")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("经过插值计算后的纹理坐标，点的范围是0.0到1.0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("vec2")])])])]),t._v(" "),a("p",[a("code",[t._v("output")]),t._v(" 类型的内置变量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("单位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("mediump vec4 gl_FragColor;")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置当前片点的颜色")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("vec4 RGBA color")])]),t._v(" "),a("tr",[a("td",[t._v("mediump vec4 gl_FragData[n]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置当前片点的颜色，使用glDrawBuffers数据数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("vec4 RGBA color")])])])]),t._v(" "),a("h3",{attrs:{id:"内置的常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置的常量"}},[t._v("#")]),t._v(" 内置的常量")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 提供了一些内置的常量，用来说明当前系统的一些特性")]),t._v(" "),a("p",[t._v("有时我们需要针对这些特性，对 "),a("code",[t._v("shader")]),t._v(" 程序进行优化，让程序兼容度更好")]),t._v(" "),a("p",[a("strong",[t._v("在 "),a("code",[t._v("vertex Shader")]),t._v(" 中：")])]),t._v(" "),a("p",[t._v("1.const mediump int "),a("code",[t._v("gl_MaxVertexAttribs")]),t._v(" >=8")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxVertexAttribs")]),t._v(" 表示在 "),a("code",[t._v("vertex shader")]),t._v(" (顶点着色器)中可用的最大 "),a("code",[t._v("attributes")]),t._v(" 数。这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 8 个")]),t._v(" "),a("p",[t._v("2.const mediump int "),a("code",[t._v("gl_MaxVertexUniformVectors")]),t._v(" >= 128")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxVertexUniformVectors")]),t._v(" 表示在 "),a("code",[t._v("vertex shader")]),t._v(" (顶点着色器)中可用的最大 "),a("code",[t._v("uniform vectors")]),t._v(" 数。这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 128 个")]),t._v(" "),a("p",[t._v("3.const mediump int "),a("code",[t._v("gl_MaxVaryingVectors")]),t._v(" >= 8")]),t._v(" "),a("p",[t._v("gl_MaxVaryingVectors 表示在 "),a("code",[t._v("vertex shader")]),t._v(" (顶点着色器)中可用的最大 "),a("code",[t._v("varying vectors")]),t._v(" 数。这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 8 个")]),t._v(" "),a("p",[t._v("4.const mediump int "),a("code",[t._v("gl_MaxVertexTextureImageUnits")]),t._v(" >= 0")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxVaryingVectors")]),t._v(" 表示在 "),a("code",[t._v("vertex shader")]),t._v(" (顶点着色器)中可用的最大纹理单元数(贴图)。这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，甚至可以一个都没有(无法获取顶点纹理)")]),t._v(" "),a("p",[t._v("5.const mediump int "),a("code",[t._v("gl_MaxCombinedTextureImageUnits")]),t._v(" >= 8")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxVaryingVectors")]),t._v(" 表示在 "),a("code",[t._v("vertex Shader")]),t._v(" 和 "),a("code",[t._v("fragment Shader")]),t._v(" 总共最多支持多少个纹理单元。这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 8 个")]),t._v(" "),a("p",[a("strong",[t._v("在 "),a("code",[t._v("fragment Shader")]),t._v(" 中：")])]),t._v(" "),a("p",[t._v("1.const mediump int "),a("code",[t._v("gl_MaxTextureImageUnits")]),t._v(" >= 8")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxVaryingVectors")]),t._v(" 表示在 "),a("code",[t._v("fragment Shader")]),t._v(" (片元着色器)中能访问的最大纹理单元数，这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 8 个.")]),t._v(" "),a("p",[t._v("2.const mediump int "),a("code",[t._v("gl_MaxFragmentUniformVectors")]),t._v(" >= 16")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxFragmentUniformVectors")]),t._v(" 表示在 "),a("code",[t._v("fragment Shader")]),t._v(" (片元着色器)中可用的最大 "),a("code",[t._v("uniform vectors")]),t._v(" 数，这个值的大小取决于 "),a("code",[t._v("OpenGL ES")]),t._v(" 在某设备上的具体实现，不过最低不能小于 16 个")]),t._v(" "),a("p",[t._v("3.const mediump int "),a("code",[t._v("gl_MaxDrawBuffers")]),t._v(" = 1")]),t._v(" "),a("p",[a("code",[t._v("gl_MaxDrawBuffers")]),t._v(" 表示可用的 "),a("code",[t._v("drawBuffers")]),t._v(" 数，在 "),a("code",[t._v("OpenGL ES 2.0")]),t._v(" 中这个值为1，在将来的版本可能会有所变化。")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 中还有一种内置的 "),a("code",[t._v("uniform")]),t._v(" 状态变量，"),a("code",[t._v("gl_DepthRange")]),t._v(" 它用来表明全局深度范围")]),t._v(" "),a("p",[t._v("结构如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("struct gl_DepthRangeParameters "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n highp float near"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n")]),t._v("\n highp float far"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f")]),t._v("\n highp float diff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f - n")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n uniform gl_DepthRangeParameters gl_DepthRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("除了 "),a("code",[t._v("gl_DepthRange")]),t._v(" 外的所有 "),a("code",[t._v("uniform")]),t._v(" 状态常量都已在 "),a("code",[t._v("GLSL 1.30")]),t._v(" 中 "),a("code",[t._v("废弃")])]),t._v(" "),a("h3",{attrs:{id:"流控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流控制"}},[t._v("#")]),t._v(" 流控制")]),t._v(" "),a("p",[t._v("片段着色器中有一种特殊的控制流 "),a("code",[t._v("discard")])]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("discard")]),t._v(" 会退出片段着色器，不执行后面的片段着色操作。片段也不会写入帧缓冲区。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numLights"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lightExists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" light"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" light"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lightNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    lightNum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lightNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    discard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"内置函数库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置函数库"}},[t._v("#")]),t._v(" 内置函数库")]),t._v(" "),a("p",[a("code",[t._v("GLSL")]),t._v(" 提供了丰富的函数库，这些函数按功能区分大改可以分成7类")]),t._v(" "),a("p",[a("strong",[t._v("通用函数：")])]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("T")]),t._v(" 可以是 "),a("code",[t._v("float")]),t._v(" ，"),a("code",[t._v("vec2")]),t._v(" ，"),a("code",[t._v("vec3")]),t._v(" ，"),a("code",[t._v("vec4")]),t._v(" 且可以逐分量操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("T abs(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 x 的绝对值")])]),t._v(" "),a("tr",[a("td",[t._v("T sign(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较 x 与 0 的值，大于，等于，小于 分别返回 1.0，0.0，-1.0")])]),t._v(" "),a("tr",[a("td",[t._v("T floor(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 <= x 的最大整数")])]),t._v(" "),a("tr",[a("td",[t._v("T ceil(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 >= 等于 x 的最小整数")])]),t._v(" "),a("tr",[a("td",[t._v("T fract(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取 x 的小数部分")])]),t._v(" "),a("tr",[a("td",[t._v("T mod(T x, T y)  ;  T mod(T x, float y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取 x，y 的余数")])]),t._v(" "),a("tr",[a("td",[t._v("T min(T x, T y)  ;  T min(T x, float y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取 x，y 的最小值")])]),t._v(" "),a("tr",[a("td",[t._v("T max(T x, T y)  ;  T max(T x, float y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取 x，y 的最大值")])]),t._v(" "),a("tr",[a("td",[t._v("T clamp(T x, T minVal, T maxVal)  ;  T clamp(T x, float minVal,float maxVal)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("min(max(x, minVal), maxVal)，返回值被限定在 minVal，maxVal 之间")])]),t._v(" "),a("tr",[a("td",[t._v("T mix(T x, T y, T a)  ;  T mix(T x, T y, float a)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取x，y的线性混合，x*(1-a)+y*a")])]),t._v(" "),a("tr",[a("td",[t._v("T step(T edge, T x)  ;  T step(float edge, T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果 x < edge 返回 0.0 否则返回 1.0")])]),t._v(" "),a("tr",[a("td",[t._v("T smoothstep(T edge0, T edge1, T x)  ;  T smoothstep(float edge0,float edge1, T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果x < edge0 返回 0.0 如果 x > edge1 返回 1.0，否则返回 Hermite 插值")])])])]),t._v(" "),a("p",[a("strong",[t._v("角度&三角函数：")])]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("T")]),t._v(" 可以是 "),a("code",[t._v("float")]),t._v(" ，"),a("code",[t._v("vec2")]),t._v(" ，"),a("code",[t._v("vec3")]),t._v(" ，"),a("code",[t._v("vec4")]),t._v(" 且可以逐分量操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("T radians(T degrees)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("角度转弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T degrees(T radians)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("弧度转角度")])]),t._v(" "),a("tr",[a("td",[t._v("T sin(T angle)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("正弦函数，角度是弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T cos(T angle)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("余弦函数，角度是弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T tan(T angle)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("正切函数，角度是弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T asin(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("反正弦函数，返回值是弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T acos(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("反余弦函数，返回值是弧度")])]),t._v(" "),a("tr",[a("td",[t._v("T atan(T y, T x)  ;  T atan(T y_over_x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("反正切函数，返回值是弧度")])])])]),t._v(" "),a("p",[a("strong",[t._v("指数函数：")])]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("T")]),t._v(" 可以是 "),a("code",[t._v("float")]),t._v(" ，"),a("code",[t._v("vec2")]),t._v(" ，"),a("code",[t._v("vec3")]),t._v(" ，"),a("code",[t._v("vec4")]),t._v(" 且可以逐分量操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("T pow(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回x的y次幂 x^y")])]),t._v(" "),a("tr",[a("td",[t._v("T exp(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回x的自然指数幂 e^x")])]),t._v(" "),a("tr",[a("td",[t._v("T log(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回x的自然对数 ln")])]),t._v(" "),a("tr",[a("td",[t._v("T exp2(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回2的x次幂 2^x")])]),t._v(" "),a("tr",[a("td",[t._v("T log2(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回2为底的对数 log2")])]),t._v(" "),a("tr",[a("td",[t._v("T sqrt(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("开根号 √x")])]),t._v(" "),a("tr",[a("td",[t._v("T inversesqrt(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("先开根号，在取倒数，就是 1/√x")])])])]),t._v(" "),a("p",[a("strong",[t._v("几何函数：")])]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("T")]),t._v(" 可以是 "),a("code",[t._v("float")]),t._v(" ，"),a("code",[t._v("vec2")]),t._v(" ，"),a("code",[t._v("vec3")]),t._v(" ，"),a("code",[t._v("vec4")]),t._v(" 且可以逐分量操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("float length(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回矢量 x 的长度")])]),t._v(" "),a("tr",[a("td",[t._v("float distance(T p0, T p1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 p0 p1 两点的距离")])]),t._v(" "),a("tr",[a("td",[t._v("float dot(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 x y 的点积")])]),t._v(" "),a("tr",[a("td",[t._v("vec3 cross(vec3 x, vec3 y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 x y 的叉积")])]),t._v(" "),a("tr",[a("td",[t._v("T normalize(T x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("对x进行归一化，保持向量方向不变但长度变为1")])]),t._v(" "),a("tr",[a("td",[t._v("T faceforward(T N, T I, T Nref)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("根据 矢量 N 与 Nref 调整法向量")])]),t._v(" "),a("tr",[a("td",[t._v("T reflect(T I, T N)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回 "),a("code",[t._v("I - 2 * dot(N,I) * N")]),t._v(" ，结果是入射矢量 I 关于法向量 N 的镜面反射矢量")])]),t._v(" "),a("tr",[a("td",[t._v("T refract(T I, T N, float eta)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回入射矢量 I 关于法向量 N 的折射矢量，折射率为 eta")])])])]),t._v(" "),a("p",[a("strong",[t._v("矩阵函数：")])]),t._v(" "),a("p",[a("code",[t._v("mat")]),t._v(" 可以为任意类型矩阵")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("mat matrixCompMult(mat x, mat y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将矩阵 x 和 y的元素逐分量相乘")])])])]),t._v(" "),a("p",[a("strong",[t._v("向量函数：")])]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("T")]),t._v(" 可以是 "),a("code",[t._v("float")]),t._v(" ，"),a("code",[t._v("vec2")]),t._v(" ，"),a("code",[t._v("vec3")]),t._v(" ，"),a("code",[t._v("vec4")]),t._v(" 且可以逐分量操作")]),t._v(" "),a("p",[a("code",[t._v("bvec")]),t._v(" 指的是由 "),a("code",[t._v("bool")]),t._v(" 类型组成的一个向量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec3 v3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec3 v3_1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbvec3 aa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lessThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v3_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//bvec3(true,true,true)")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("bvec lessThan(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x < y，将结果写入 bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bvec lessThanEqual(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x <= y，将结果写入 bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bvec greaterThan(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x > y，将结果写入 bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bvec greaterThanEqual(T x, T y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x >= y，将结果写入bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bvec equal(T x, T y)  ;  bvec equal(bvec x, bvec y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x == y，将结果写入 bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bvec notEqual(T x, T y)  ;  bvec notEqual(bvec x, bvec y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逐分量比较 x!= y，将结果写入 bvec 对应位置")])]),t._v(" "),a("tr",[a("td",[t._v("bool any(bvec x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果x的任意一个分量是 true ，则结果为 true")])]),t._v(" "),a("tr",[a("td",[t._v("bool all(bvec x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果x的所有分量是 true ，则结果为 true")])]),t._v(" "),a("tr",[a("td",[t._v("bvec not(bvec x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool 矢量的逐分量取反")])])])]),t._v(" "),a("p",[a("strong",[t._v("纹理查询函数：")])]),t._v(" "),a("p",[t._v("图像纹理有两种：平面 "),a("code",[t._v("2d")]),t._v(" 纹理、盒纹理")]),t._v(" "),a("p",[t._v("纹理查询的最终目的是从 "),a("code",[t._v("sampler")]),t._v(" 中提取指定坐标的颜色信息")]),t._v(" "),a("p",[t._v("函数中带有 "),a("code",[t._v("Cube")]),t._v(" 字样的是指需要传入盒状纹理；带有 "),a("code",[t._v("Proj")]),t._v(" 字样的是指带投影的版本")]),t._v(" "),a("p",[t._v("以下函数只在 "),a("code",[t._v("vertex shader")]),t._v(" 中可用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DLod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec2 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float lod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProjLod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float lod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProjLod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec4 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float lod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("textureCubeLod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("samplerCube sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float lod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("以下函数只在 "),a("code",[t._v("fragment shader")]),t._v(" 中可用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec2 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float bias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float bias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec4 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float bias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("textureCube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("samplerCube sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" float bias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 "),a("code",[t._v("vertex shader")]),t._v(" 与 "),a("code",[t._v("fragment shader")]),t._v(" 中都可用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec2 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2DProj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sampler2D sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec4 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("textureCube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("samplerCube sampler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vec3 coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[a("code",[t._v("Vertex Shader")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("uniform mat4 mvp_matrix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//透视矩阵 * 视图矩阵 * 模型变换矩阵")]),t._v("\nuniform mat3 normal_matrix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//法线变换矩阵(用于物体变换后法线跟着变换)")]),t._v("\nuniform vec3 ec_light_dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//光照方向")]),t._v("\nattribute vec4 a_vertex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 顶点坐标")]),t._v("\nattribute vec3 a_normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//顶点法线")]),t._v("\nattribute vec2 a_texcoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//纹理坐标")]),t._v("\nvarying float v_diffuse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//法线与入射光的夹角")]),t._v("\nvarying vec2 v_texcoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2d纹理坐标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//归一化法线")]),t._v("\n vec3 ec_normal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("normalize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("normal_matrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a_normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//v_diffuse 是法线与光照的夹角.根据向量点乘法则,当两向量长度为1是 乘积即cosθ值")]),t._v("\n v_diffuse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ec_light_dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ec_normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n v_texcoord "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a_texcoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n gl_Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mvp_matrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a_vertex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("Fragment Shader")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("precision mediump float"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuniform sampler2D t_reflectance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuniform vec4 i_ambient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvarying float v_diffuse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvarying vec2 v_texcoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n vec4 color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("texture2D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t_reflectance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_texcoord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里分解开来是 color*vec3(1,1,1)*v_diffuse + color*i_ambient")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//色*光*夹角cos + 色*环境光")]),t._v("\n gl_FragColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_diffuse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i_ambient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);