(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{299:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"grammar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grammar"}},[a._v("#")]),a._v(" Grammar")]),a._v(" "),t("h2",{attrs:{id:"可选链-optional-chaining"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选链-optional-chaining"}},[a._v("#")]),a._v(" 可选链("),t("code",[a._v("Optional Chaining")]),a._v("): "),t("code",[a._v("?.")])]),a._v(" "),t("p",[a._v("可选链允许你读取位于连接对象链深处的属性的值，而不必显式地验证链中的每个引用是否有效。如果尝试访问的属性不存在，那么表达式会短路并返回 "),t("code",[a._v("undefined")]),a._v(" 而不是抛出一个错误。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("Ref"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?.")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?.")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("acceptParams")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n如果 Ref 是 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" 或 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v("，那么整个表达式会返回 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v("。\n否则，它会尝试访问 Ref 的 value 属性。\n如果 Ref"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?.")]),a._v("value 的结果不是 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" 或 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v("，那么会尝试调用其 acceptParams 方法。\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);